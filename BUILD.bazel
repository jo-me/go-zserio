load("@buildifier_prebuilt//:rules.bzl", "buildifier")
load("@gazelle//:def.bzl", "gazelle")
load("@rules_go//go:def.bzl", "go_library")
load("@bazel_env.bzl", "bazel_env")

# gazelle:prefix github.com/woven-planet/go-zserio
# gazelle:exclude example/**
# gazelle:exclude **/*_gen.zs.go
#
# For generated zserio libraries:
# gazelle:resolve go gen/github.com/woven-planet/go-zserio/testdata/reference_modules/core/instantiations //testdata/reference_modules:go_core_instantiations
# gazelle:resolve go gen/github.com/woven-planet/go-zserio/testdata/reference_modules/core/types //testdata/reference_modules:go_core_types
# gazelle:resolve go gen/github.com/woven-planet/go-zserio/testdata/reference_modules/testobject1/testobject //testdata/reference_modules:go_testobject
gazelle(name = "gazelle")

gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go.mod",
        "-to_macro=third_party/go/repositories.bzl%go_repositories",
        "-prune",
    ],
    command = "update-repos",
)

buildifier(
    name = "buildifier",
    exclude_patterns = [
        "./.git/*",
    ],
    lint_mode = "warn",
    lint_warnings = ["all"],
)

go_library(
    name = "go-zserio",
    srcs = [
        "doc.go",
        "iface.go",
        "marshal.go",
        "packing_context_node.go",
    ],
    importpath = "github.com/woven-planet/go-zserio",
    visibility = ["//visibility:public"],
    deps = ["//zstream"],
)

# This is to ensure that common CLI tools are added to the PATH when using direnv.
bazel_env(
    name = "bazel_env",
    tools = {
        # Tools can be specified as labels.
        "buildifier": "@buildifier_prebuilt//:buildifier",
        "buildozer": "@buildifier_prebuilt//:buildozer",
    },
)
